# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}:

{
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  boot.initrd.availableKernelModules = [
    "uhci_hcd"
    "ehci_pci"
    "ahci"
    "xhci_pci"
    "usb_storage"
    "usbhid"
    "sd_mod"
  ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/ed35ecdd-bed1-426d-b826-ed4cfafb9176";
    fsType = "btrfs";
    options = [
      "subvol=root"
      "compress=zstd"
    ];
  };

  boot.initrd.luks.devices."cryptroot".device = "/dev/disk/by-uuid/4fad4954-f3c2-4d79-ad4c-8e58b2d5017a";
  boot.initrd.luks.devices."cryptdisk1".device = "/dev/disk/by-uuid/34db2f61-0161-4cc0-b9ee-c4efd1a54f38";
  boot.initrd.luks.devices."cryptdisk2".device = "/dev/disk/by-uuid/ccd3bb16-c2e5-4042-999c-fd79d6327fe8";

  fileSystems."/home" = {
    device = "/dev/disk/by-uuid/ed35ecdd-bed1-426d-b826-ed4cfafb9176";
    fsType = "btrfs";
    options = [
      "subvol=home"
      "compress=zstd"
    ];
  };

  fileSystems."/nix" = {
    device = "/dev/disk/by-uuid/ed35ecdd-bed1-426d-b826-ed4cfafb9176";
    fsType = "btrfs";
    options = [
      "subvol=nix"
      "compress=zstd"
      "noatime"
    ];
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/9F8A-96EE";
    fsType = "vfat";
    options = [
      "fmask=0022"
      "dmask=0022"
    ];
  };

  networking.hostId = "5657ea3c";
  fileSystems."/store/backups" = {
    device = "store/backups";
    fsType = "zfs";
  };

  swapDevices = [ { device = "/dev/disk/by-uuid/2d2f3276-4ff0-45c3-947f-79303a5f2567"; } ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp4s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp5s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
